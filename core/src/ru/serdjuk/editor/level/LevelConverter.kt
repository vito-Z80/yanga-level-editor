package ru.serdjuk.editor.level

import ru.serdjuk.editor.imitationZXObjects.ZXObject

@ExperimentalUnsignedTypes
object LevelConverter {
    /*
        карта подготовки:
                карта созданная тут и портируемая в ZX для переработки и запуска уровня

        одиночный объект:
            1 - номер объекта   (из карты объектов где хранятся адресса на объекты)
            2 - байт определения
            3 - X
            4 - Y
        более одного идентичных объектов
            1 - количество объектов
            2 - номер объекта
            3 - байт определния
            4 - X
            5 - Y
            6 - X
            7 - Y
            ...
        ---------------------------------
        карта опроса:
                переработанная карта для ZX по которой сверяются коллизии

                хранит 1 байт на ячейку cell
                cell * 2 + startObjects = адрес нужного объекта

                        содержимое объекта:
                            1 - байт спрайта
                            2 - байт опроса
                            3 - X
                            4 - Y


                пример:
                    герой шагнул вправо (там неуничтожаемый блок)
                        находим ячейку справа
                        берем из нее байт объекта (к примеру 1) (0 - проход разрешен)
                        умножаем этот байт на 4 (размер объека в байтах) прибавляем начало адреса всех объектов и плюс 4
                        получаем адресс объекта взаимодействия
                        берем его первый байт (байт спрайта) и узнаем что это за спрайт что бы опросить его
                        переходим на опрос данного объекта
                        берем второй байт и проверяем его биты определим взаимодействие с ним


            objects     -   адрес начала всех объектов

            simple code:
                hero move right
                check right cell
                    ld a,(cell)     //  получили ID карты объектов
                    ld hl,mul (a * object.size(4) + objects) //  получили адресс нужного объекта
                    xor a
                    ld a,(hl)   // получили спрайт объект
                    ret z       //  нулевой спрайт (пустышка) проход свободен
                    cp 1
                    jp z,blockExamine       // обследуем биты блока на дальнейшее взаимодействие с героем
                    cp 2
                    ...
                    ...

    blockExamine
                    ld a,(hl+1) получили бит опроса объекта и дальше работаем с ним


        ---------------------------------
        все возможное:
            проходимость - можно ли пройти через объект - отвечает 1 БИТ
            урон       - урон наносимый оппоненту
                            урон могут наносить:
                                оружие игрока
                                некоторые враги или их оружие
                                огонь
                                ...
                                за опасность отвечают 3 БИТА (7)

            здоровье  - здоровье объекта
                            можно немного или полностью восстановить (плюхой восстановления)
                            можно потерять часть или быть убитым (урон от оппонента)
                                здоровье занимает 5 БАЙТ (31)


            восстановление  -   плюха прибавляющая энное кол-во единиц здоровья к сожравшему плюху
                                    отвечают 4 бита (15)

            цвет    -   определяет цвет объекта - отвечают 3 БИТА (подогнать что бы эти 3 бита были первыми в байте)

            притяжение  -   1 БИТ опрашиваемый только кошкой
                                если бит включен у объекта то кошка передает ему свои координаты += размер
                                взависимости от направления, тем самым притягивая объект к игроку
                                данный бит может быть включен у объектов:
                                    враги,определенные блоки

            толчек      -   1 БИТ объект с включенным данным битом может толкаться по карте до столкновения
                            следующими объектами:
                                герой, враги, удар мечем, удар телом



            подмена - при воздействии меняет объект на задданый 2мя БАЙТАМИ блять это перебор

            перемещаемость -    объект может передвигаться:
                                    сам
                                        враги, некоторые блоки
                                    до указанных координат
                                        кошка задает координаты

                                    варианты:
                                        БАЙТ
                                            1   -   автоматическое перемещение до любого столкновения и далее...
                                            2   -   автоматическое преследование заданного объекта + 2 байта адресс преследуемого объекта
                                            3   -   на заданные координаты + 2 байта на координаты
                                            4   -   по вертикали
                                            5   -   по горизонтали
                                            6   -   смена перемещаемости при достижении заданных координат + 1 байт новая перемещаемость
                                            7   -   автоматическое перемещение
                                            8   -   автоматическое перемещение
                                            9   -   автоматическое перемещение
                                           10   -   автоматическое перемещение
                                        БИТЫ

                                    3 БИТА
                                    000  -
                                    001  -  + автоматическое тупое перемещение
                                    010  -  - автоматическое преследование заданной точки
                                    011  -  - смена перемещаемости при достижении заданной точки
                                    100  -
                                    101  -  - на задынне координаты
                                    110  -  + по вертикали
                                    111  -  + по горизонтали

            переключатель -

            вода -

            огонь -




        ---------------------------------


        bit     set                 res

        0   непроходимость      проходимость    -   если байт ноль - остальные биты не опрашиваются = объект проходим (пустышка)
        1   передвижение        статичный       -   может передвигаться или притягиваться

        ---------------------------------

      если бит 0 выключен - гасим все биты автоматом, кроме: переключателей,выхода
        биты                        объекты
      00000001              блок(статическая нерушимая стена) - проверяется просто (cp 1) без дальнейшей проверки битов
      00000011              блок(передвигаемый кем либо)
                                непрохдимый, передвижение
     */


    fun toZx(layer: ArrayList<ZXObject>) {
        //  найти все объекты с одинаковыми значениями
        val result = ArrayList<Int>()

        layer.forEach {
            if (it.name != "empty") {
                getIdentical(it, layer)
            }
        }


    }


    private fun getIdentical(obj: ZXObject, layer: ArrayList<ZXObject>) {

        val coordinates = ArrayList<Int>()
        coordinates.add(obj.x.toInt())
        coordinates.add(obj.y.toInt())
        layer.forEach {
            if (it.name == obj.name && it != obj) {
                if (
                        obj.color == it.color
                        && obj.through == it.through
                        && obj.isToggle == it.isToggle
                        && obj.driven == it.driven
                        && obj.isVisible == it.isVisible
                        && obj.dangerous == it.dangerous
                        && obj.vulnerable == it.vulnerable
                ) {
                    coordinates.add(it.x.toInt())
                    coordinates.add(it.y.toInt())
                }
            }
        }

        coordinates.forEachIndexed { id, c ->
            if (id % 2 == 0) println()
            print("$c, ")
        }
        println()
        println(obj.name)
        println("---------------------------------")

    }

}